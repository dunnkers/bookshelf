{"version":3,"sources":["ShelfIcon.js","App.js","serviceWorker.js","index.js"],"names":["ShelfIcon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bounce","load","setState","loading","onClick","_this2","react_default","a","createElement","className","concat","xmlns","preserveAspectRatio","viewBox","height","width","onMouseEnter","triggerBounce","onAnimationEnd","animationEnded","onAnimationIteration","animationIteration","triggerClick","title","fill","d","fillRule","nextProps","prevState","Component","defaultProps","Book","_this$props$book","book","link","image_url","authors","es","small","large","hideDownload","hideZoom","href","author","name","Shelf","books","shelf","sort","b","read_at","dateCmp","Date","map","id","App_Book","key","BookSkeleton","lines","Math","floor","random","lineArr","Array","from","keys","bundle_default","_","index","ShelfSkeleton","App_BookSkeleton","App","grab","url","fetch","then","response","json","catch","error","console","_this3","year","getFullYear","src_ShelfIcon_0","update","App_Shelf","current","App_ShelfSkeleton","read","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ySAGMA,2BACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,QAAQ,EAAOC,MAAM,GAFnBT,+EAOjBG,KAAKO,SAAS,CAAEF,QAAQ,iDAInBL,KAAKJ,MAAMY,SACdR,KAAKO,SAAS,CAAED,MAAM,6CAKxBN,KAAKO,SAAS,CAAEF,QAAQ,2CAInBL,KAAKJ,MAAMY,SAASR,KAAKJ,MAAMa,2CAS7B,IAAAC,EAAAV,KACDQ,EAAUR,KAAKI,MAAME,KACrBD,EAASL,KAAKI,MAAMC,OAE1B,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAS,cAAAC,OAAgBP,GAAW,UAA3B,KAAAO,OAAwCV,GAAU,UAChEW,MAAM,6BAA6BC,oBAAoB,WAAWC,QAAQ,cAAcC,OAAO,KAAKC,MAAM,KAC1GC,aAAc,kBAAMX,EAAKY,iBACzBC,eAAgB,kBAAMb,EAAKc,kBAC3BC,qBAAsB,kBAAMf,EAAKgB,sBACjCjB,QAAS,kBAAMC,EAAKiB,gBACpBC,MAAM,gBAEJjB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,OAAOC,EAAE,4SACpBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAyCiB,SAAS,WAC7DpB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,mGACvBnB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,qJAEzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAyCiB,SAAS,WAC7DpB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,mGACvBnB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,kEAEzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CAA2CiB,SAAS,WAC/DpB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,wHACvBnB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,mFAEzBnB,EAAAC,EAAAC,cAAA,KAAGkB,SAAS,WACVpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBe,KAAK,UAAUC,EAAE,gFACrDnB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,UAAUC,EAAE,8LAlCCE,EAAWC,GACzC,OAAID,EAAUxB,QACL,CAAEF,MAAM,GACH,YA5BM4B,cAkExBvC,EAAUwC,aAAe,CACvB3B,SAAS,EACTC,QAAS,cAGId,QCnETyC,mLACK,IAAAC,EACqCrC,KAAKJ,MAAM0C,KAA/CV,EADDS,EACCT,MAAOW,EADRF,EACQE,KAAMC,EADdH,EACcG,UAAWC,EADzBJ,EACyBI,QAEhC,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEC,MAAOH,EACPI,MAAOJ,EACPK,cAAc,EACdC,UAAU,IAEZnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGkC,KAAMR,GAAOX,IAElBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZ2B,EAAQO,OAAOC,cAhBPf,aAuBbgB,mLACK,IACDC,EAAUnD,KAAKJ,MAAMwD,MAArBD,MAUN,OARAA,EAAQA,EAAME,KAAK,SAACzC,EAAG0C,GACrB,OAAI1C,EAAE2C,SAAWD,EAAEC,QAFL,SAAC3C,EAAG0C,GAAJ,OAAW1C,EAAI0C,IAAM1C,EAAI0C,GAG9BE,CAAQ,IAAIC,KAAK7C,EAAE2C,SAAU,IAAIE,KAAKH,EAAEC,UAG1C,IAIP5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZqC,EAAMO,IAAI,SAACpB,EAAMqB,GAAP,OACThD,EAAAC,EAAAC,cAAC+C,EAAD,CAAMtB,KAAMA,EAAKA,KAAMuB,IAAKF,cAflBzB,aAsBd4B,mLAEF,IAAMC,EAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACxCC,EAAUC,MAAMC,KAAKD,MAAML,GAAOO,QAGxC,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAUQ,MAAO,IAAKD,OAAQ,MAC9BR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZqD,EAAQT,IAAI,SAACc,EAAGC,GAAJ,OACX9D,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAUQ,MAPE4C,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAOnBL,IAAKY,eAXhBvC,aAmBrBwC,mLAEF,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZ,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG4C,IAAI,SAACpB,EAAMqB,GAAP,OACnBhD,EAAAC,EAAAC,cAAC8D,EAAD,CAAcd,IAAKF,cALDzB,aA0Db0C,cA7Cb,SAAAA,EAAYhF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACjB/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMJ,KACDQ,MAAQ,CACXgD,OAAO,GAHQvD,mFAQjBG,KAAK6E,KAAK,yEAGPC,GAAK,IAAApE,EAAAV,KACR+E,MAAMD,GAAKE,KAAK,SAACC,GAAD,OAAcA,EAASC,SACpCF,KAAK,SAAAC,GAAQ,OAAIvE,EAAKH,SAAS,CAAE6C,MAAO6B,MACxCE,MAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,sCAIlCpF,KAAKO,SAAS,CAAE6C,OAAO,IACvBpD,KAAK6E,KAAK,yFAGH,IAAAS,EAAAtF,KACDuF,GAAO,IAAI9B,MAAO+B,cAExB,OACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAlB,uCAEEH,EAAAC,EAAAC,cAAC4E,EAAD,CACEjF,SAASR,KAAKI,MAAMgD,MACpB3C,QAAS,kBAAM6E,EAAKI,aAExB/E,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,qBACCd,KAAKI,MAAMgD,MAAQzC,EAAAC,EAAAC,cAAC8E,EAAD,CAAOvC,MAAOpD,KAAKI,MAAMgD,MAAMwC,UAAcjF,EAAAC,EAAAC,cAACgF,EAAD,MACjElF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,QACCd,KAAKI,MAAMgD,MAAQzC,EAAAC,EAAAC,cAAC8E,EAAD,CAAOvC,MAAOpD,KAAKI,MAAMgD,MAAM0C,OAAWnF,EAAAC,EAAAC,cAACgF,EAAD,OAEhElF,EAAAC,EAAAC,cAAA,iCAAoB0E,WAxCVrD,aCvEE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.4db477d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ShelfIcon.css';\n\nclass ShelfIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { bounce: false, load: false };\n  }\n  \n  /* Some (overly?) complicated logic to ensure animation always finishes. */\n  triggerBounce() {\n    this.setState({ bounce: true });\n  }\n\n  animationIteration() {\n    if (!this.props.loading) {\n      this.setState({ load: false });\n    }\n  }\n\n  animationEnded() {\n    this.setState({ bounce: false });\n  }\n\n  triggerClick() {\n    if (!this.props.loading) this.props.onClick()\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.loading) {\n      return { load: true };\n    } else return null;\n  }\n\n  render() {\n    const loading = this.state.load;\n    const bounce = this.state.bounce;\n\n    return (\n      <svg className={`book-shelf ${loading && 'loading'} ${bounce && 'bounce'}`}\n      xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\" viewBox=\"14 32 50 20\" height=\"44\" width=\"34\"\n      onMouseEnter={() => this.triggerBounce()}\n      onAnimationEnd={() => this.animationEnded()}\n      onAnimationIteration={() => this.animationIteration()}\n      onClick={() => this.triggerClick()}\n      title=\"Update books\"\n      >\n        <path fill=\"none\" d=\"M37.612 92.805L4.487 73.71c-2.75-1.587-4.45-4.52-4.45-7.687L.008 27.877c-.003-3.154 1.676-6.063 4.405-7.634L37.558 1.167c2.73-1.57 6.096-1.566 8.835.013l33.124 19.096c2.75 1.586 4.45 4.518 4.45 7.686l.028 38.146c.002 3.154-1.677 6.063-4.406 7.634L46.445 92.818c-2.73 1.57-6.096 1.566-8.834-.013z\"/>\n        <g className=\"book-shelf__book book-shelf__book--one\" fillRule=\"evenodd\">\n          <path fill=\"#5199fc\" d=\"M31 29h4c1.105 0 2 .895 2 2v29c0 1.105-.895 2-2 2h-4c-1.105 0-2-.895-2-2V31c0-1.105.895-2 2-2z\"/>\n          <path fill=\"#afd7fb\" d=\"M34 36h-2c-.552 0-1-.448-1-1s.448-1 1-1h2c.552 0 1 .448 1 1s-.448 1-1 1zm-2 1h2c.552 0 1 .448 1 1s-.448 1-1 1h-2c-.552 0-1-.448-1-1s.448-1 1-1z\"/>\n        </g>\n        <g className=\"book-shelf__book book-shelf__book--two\" fillRule=\"evenodd\">\n          <path fill=\"#ff9868\" d=\"M39 34h6c1.105 0 2 .895 2 2v24c0 1.105-.895 2-2 2h-6c-1.105 0-2-.895-2-2V36c0-1.105.895-2 2-2z\"/>\n          <path fill=\"#d06061\" d=\"M42 38c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2z\"/>\n        </g>\n        <g className=\"book-shelf__book book-shelf__book--three\" fillRule=\"evenodd\">\n          <path fill=\"#ff5068\" d=\"M49 32h2c1.105 0 2 .86 2 1.92v25.906c0 1.06-.895 1.92-2 1.92h-2c-1.105 0-2-.86-2-1.92V33.92c0-1.06.895-1.92 2-1.92z\"/>\n          <path fill=\"#d93368\" d=\"M50 35c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1s-1-.448-1-1v-2c0-.552.448-1 1-1z\"/>\n        </g>\n        <g fillRule=\"evenodd\">\n          <path className=\"book-shelf__shelf\" fill=\"#ae8280\" d=\"M21 60h40c1.105 0 2 .895 2 2s-.895 2-2 2H21c-1.105 0-2-.895-2-2s.895-2 2-2z\"/>\n          <path fill=\"#855f6d\" d=\"M51.5 67c-.828 0-1.5-.672-1.5-1.5V64h3v1.5c0 .828-.672 1.5-1.5 1.5zm-21 0c-.828 0-1.5-.672-1.5-1.5V64h3v1.5c0 .828-.672 1.5-1.5 1.5z\"/>\n        </g>\n      </svg>\n    );\n  }\n}\n\nShelfIcon.defaultProps = {\n  loading: false,\n  onClick: () => {}\n};\n\nexport default ShelfIcon;","import React, { Component } from 'react';\nimport ModalImage from 'react-modal-image'\nimport Skeleton from 'react-loading-skeleton';\n\nimport './App.css';\nimport ShelfIcon from './ShelfIcon';\n\nclass Book extends Component {\n  render() {\n    const { title, link, image_url, authors } = this.props.book;\n\n    return (\n      <div className=\"book\">\n        <ModalImage\n          small={image_url}\n          large={image_url}\n          hideDownload={true}\n          hideZoom={true}\n        />\n        <div className=\"title\">\n          <a href={link}>{title}</a>\n        </div>\n        <div className=\"author\">\n          {authors.author.name}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Shelf extends Component {\n  render() {\n    let { books } = this.props.shelf;\n    const dateCmp = (a, b) => (a < b) - (a > b); // stackoverflow q492994\n    books = books.sort((a, b) => {\n      if (a.read_at && b.read_at) {// has read_at data\n        return dateCmp(new Date(a.read_at), new Date(b.read_at));\n      }\n      \n      return 0;\n    });\n\n    return (\n      <div className=\"shelf\">\n        {books.map((book, id) => (\n          <Book book={book.book} key={id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass BookSkeleton extends Component {\n  render() {\n    const lines = Math.floor(Math.random() * 3) + 2;\n    const lineArr = Array.from(Array(lines).keys());\n    const width = () => Math.floor(Math.random() * 50) + 100;\n\n    return (\n      <div className=\"book\">\n        <Skeleton width={150} height={240} />\n        <div className=\"title\">\n          {lineArr.map((_, index) => (\n            <Skeleton width={width()} key={index} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ShelfSkeleton extends Component {\n  render() {\n    return (\n      <div className=\"shelf\">\n        {[1, 2, 3, 4, 5].map((book, id) => (\n          <BookSkeleton key={id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shelf: false\n    };\n  }\n  \n  componentDidMount() {\n    this.grab('https://goodreads-shelves.herokuapp.com/');\n  }\n\n  grab(url) {\n    fetch(url).then((response) => response.json())\n      .then(response => this.setState({ shelf: response }))\n      .catch((error) => console.error(error));\n  }\n\n  update() {\n    this.setState({ shelf: false });\n    this.grab('https://goodreads-shelves.herokuapp.com/force-update');\n  }\n\n  render() {\n    const year = new Date().getFullYear();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Dunnkers' Digital Reading Shelf &nbsp;\n          <ShelfIcon \n            loading={this.state.shelf ? false : true} \n            onClick={() => this.update()} />\n        </header>\n        <section>\n          <h2 className=\"shelf-header\">Currently reading</h2>\n          {this.state.shelf ? <Shelf shelf={this.state.shelf.current} /> : <ShelfSkeleton />}\n          <h2 className=\"shelf-header\">Read</h2>\n          {this.state.shelf ? <Shelf shelf={this.state.shelf.read} /> : <ShelfSkeleton />}\n        </section>\n        <footer>Dunnkers ♥ {year}</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}