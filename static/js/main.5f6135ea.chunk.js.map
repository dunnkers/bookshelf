{"version":3,"sources":["ShelfIcon.js","App.js","serviceWorker.js","index.js"],"names":["ShelfIcon","props","state","bounce","load","this","setState","loading","onClick","className","xmlns","preserveAspectRatio","viewBox","height","width","onMouseEnter","triggerBounce","onAnimationEnd","animationEnded","onAnimationIteration","animationIteration","triggerClick","title","fill","d","fillRule","nextProps","prevState","Component","defaultProps","API_URL","Book","book","link","image_url","authors","small","large","hideDownload","hideZoom","href","author","name","Shelf","books","shelf","sort","a","b","read_at","dateCmp","Date","map","id","BookSkeleton","lines","Math","floor","random","lineArr","Array","from","keys","_","index","ShelfSkeleton","App","grab","url","fetch","then","response","json","catch","error","console","year","getFullYear","update","current","read","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f6135ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ShelfIcon.css';\n\nclass ShelfIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { bounce: false, load: false };\n  }\n  \n  /* Some (overly?) complicated logic to ensure animation always finishes. */\n  triggerBounce() {\n    this.setState({ bounce: true });\n  }\n\n  animationIteration() {\n    if (!this.props.loading) {\n      this.setState({ load: false });\n    }\n  }\n\n  animationEnded() {\n    this.setState({ bounce: false });\n  }\n\n  triggerClick() {\n    if (!this.props.loading) this.props.onClick()\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.loading) {\n      return { load: true };\n    } else return null;\n  }\n\n  render() {\n    const loading = this.state.load;\n    const bounce = this.state.bounce;\n\n    return (\n      <svg className={`book-shelf ${loading && 'loading'} ${bounce && 'bounce'}`}\n      xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\" viewBox=\"14 32 50 20\" height=\"44\" width=\"34\"\n      onMouseEnter={() => this.triggerBounce()}\n      onAnimationEnd={() => this.animationEnded()}\n      onAnimationIteration={() => this.animationIteration()}\n      onClick={() => this.triggerClick()}\n      title=\"Update books\"\n      >\n        <path fill=\"none\" d=\"M37.612 92.805L4.487 73.71c-2.75-1.587-4.45-4.52-4.45-7.687L.008 27.877c-.003-3.154 1.676-6.063 4.405-7.634L37.558 1.167c2.73-1.57 6.096-1.566 8.835.013l33.124 19.096c2.75 1.586 4.45 4.518 4.45 7.686l.028 38.146c.002 3.154-1.677 6.063-4.406 7.634L46.445 92.818c-2.73 1.57-6.096 1.566-8.834-.013z\"/>\n        <g className=\"book-shelf__book book-shelf__book--one\" fillRule=\"evenodd\">\n          <path fill=\"#5199fc\" d=\"M31 29h4c1.105 0 2 .895 2 2v29c0 1.105-.895 2-2 2h-4c-1.105 0-2-.895-2-2V31c0-1.105.895-2 2-2z\"/>\n          <path fill=\"#afd7fb\" d=\"M34 36h-2c-.552 0-1-.448-1-1s.448-1 1-1h2c.552 0 1 .448 1 1s-.448 1-1 1zm-2 1h2c.552 0 1 .448 1 1s-.448 1-1 1h-2c-.552 0-1-.448-1-1s.448-1 1-1z\"/>\n        </g>\n        <g className=\"book-shelf__book book-shelf__book--two\" fillRule=\"evenodd\">\n          <path fill=\"#ff9868\" d=\"M39 34h6c1.105 0 2 .895 2 2v24c0 1.105-.895 2-2 2h-6c-1.105 0-2-.895-2-2V36c0-1.105.895-2 2-2z\"/>\n          <path fill=\"#d06061\" d=\"M42 38c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2z\"/>\n        </g>\n        <g className=\"book-shelf__book book-shelf__book--three\" fillRule=\"evenodd\">\n          <path fill=\"#ff5068\" d=\"M49 32h2c1.105 0 2 .86 2 1.92v25.906c0 1.06-.895 1.92-2 1.92h-2c-1.105 0-2-.86-2-1.92V33.92c0-1.06.895-1.92 2-1.92z\"/>\n          <path fill=\"#d93368\" d=\"M50 35c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1s-1-.448-1-1v-2c0-.552.448-1 1-1z\"/>\n        </g>\n        <g fillRule=\"evenodd\">\n          <path className=\"book-shelf__shelf\" fill=\"#ae8280\" d=\"M21 60h40c1.105 0 2 .895 2 2s-.895 2-2 2H21c-1.105 0-2-.895-2-2s.895-2 2-2z\"/>\n          <path fill=\"#855f6d\" d=\"M51.5 67c-.828 0-1.5-.672-1.5-1.5V64h3v1.5c0 .828-.672 1.5-1.5 1.5zm-21 0c-.828 0-1.5-.672-1.5-1.5V64h3v1.5c0 .828-.672 1.5-1.5 1.5z\"/>\n        </g>\n      </svg>\n    );\n  }\n}\n\nShelfIcon.defaultProps = {\n  loading: false,\n  onClick: () => {}\n};\n\nexport default ShelfIcon;","import React, { Component } from 'react';\nimport ModalImage from 'react-modal-image'\nimport Skeleton from 'react-loading-skeleton';\n\nimport './App.css';\nimport ShelfIcon from './ShelfIcon';\n\nconst API_URL = \"https://europe-west1-dunnkers-bookshelf.cloudfunctions.net/goodreads-api\";\n\nclass Book extends Component {\n  render() {\n    const { title, link, image_url, authors } = this.props.book;\n\n    return (\n      <div className=\"book\">\n        <ModalImage\n          small={image_url}\n          large={image_url}\n          hideDownload={true}\n          hideZoom={true}\n        />\n        <div className=\"title\">\n          <a href={link}>{title}</a>\n        </div>\n        <div className=\"author\">\n          {authors.author.name}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Shelf extends Component {\n  render() {\n    let { books } = this.props.shelf;\n    const dateCmp = (a, b) => (a < b) - (a > b); // stackoverflow q492994\n    books = books.sort((a, b) => {\n      if (a.read_at && b.read_at) {// has read_at data\n        return dateCmp(new Date(a.read_at), new Date(b.read_at));\n      }\n      \n      return 0;\n    });\n\n    return (\n      <div className=\"shelf\">\n        {books.map((book, id) => (\n          <Book book={book.book} key={id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass BookSkeleton extends Component {\n  render() {\n    const lines = Math.floor(Math.random() * 3) + 2;\n    const lineArr = Array.from(Array(lines).keys());\n    const width = () => Math.floor(Math.random() * 50) + 100;\n\n    return (\n      <div className=\"book\">\n        <Skeleton width={150} height={240} />\n        <div className=\"title\">\n          {lineArr.map((_, index) => (\n            <Skeleton width={width()} key={index} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ShelfSkeleton extends Component {\n  render() {\n    return (\n      <div className=\"shelf\">\n        {[1, 2, 3, 4, 5].map((book, id) => (\n          <BookSkeleton key={id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shelf: false\n    };\n  }\n  \n  componentDidMount() {\n    this.grab(`${API_URL}/?bust=false`);\n  }\n\n  grab(url) {\n    fetch(url).then((response) => response.json())\n      .then(response => this.setState({ shelf: response }))\n      .catch((error) => console.error(error));\n  }\n\n  update() {\n    this.setState({ shelf: false });\n    this.grab(`${API_URL}/?bust=true`);\n  }\n\n  render() {\n    const year = new Date().getFullYear();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Dunnkers' Digital Reading Shelf &nbsp;\n          <div title=\"Update book list\">\n            <ShelfIcon \n              loading={this.state.shelf ? false : true} \n              onClick={() => this.update()} />\n          </div>\n        </header>\n        <section>\n          <h2 className=\"shelf-header\">Currently reading</h2>\n          {this.state.shelf ? <Shelf shelf={this.state.shelf.current} /> : <ShelfSkeleton />}\n          <h2 className=\"shelf-header\">Read</h2>\n          {this.state.shelf ? <Shelf shelf={this.state.shelf.read} /> : <ShelfSkeleton />}\n        </section>\n        <footer><a href='https://dunnkers.com/'>dunnkers</a> ♥ {year}</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}